CREATE TYPE user_role AS ENUM ('admin', 'event_coordinator', 'participant');

create table "public"."user_roles" (
    "id" bigint generated by default as identity not null
);

alter table "public"."user_roles" add column "role" user_role default 'participant'::user_role;

alter table "public"."user_roles" add column "user_id" uuid;

alter table "public"."user_roles" enable row level security;

CREATE UNIQUE INDEX user_roles_pkey ON public.user_roles USING btree (id);

alter table "public"."user_roles" add constraint "user_roles_pkey" PRIMARY KEY using index "user_roles_pkey";

alter table "public"."user_roles" add constraint "user_roles_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) not valid;

alter table "public"."user_roles" validate constraint "user_roles_user_id_fkey";

create policy "Enable read access for user owned roles"
on "public"."user_roles"
as permissive
for select
to public
using ((auth.uid() = user_id));