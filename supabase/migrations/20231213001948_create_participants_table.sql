create table "public"."hackathons_participants" (
    "user_id" uuid not null,
    "hackathon_id" bigint not null
);


alter table "public"."hackathons_participants" enable row level security;

create table "public"."participants" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "user_id" uuid
);


alter table "public"."participants" enable row level security;

alter table "public"."profiles" add column "bio" text;

CREATE UNIQUE INDEX hackathons_participants_pkey ON public.hackathons_participants USING btree (user_id, hackathon_id);

CREATE UNIQUE INDEX participants_pkey ON public.participants USING btree (id);

alter table "public"."hackathons_participants" add constraint "hackathons_participants_pkey" PRIMARY KEY using index "hackathons_participants_pkey";

alter table "public"."participants" add constraint "participants_pkey" PRIMARY KEY using index "participants_pkey";

alter table "public"."hackathons_participants" add constraint "hackathons_participants_hackathon_id_fkey" FOREIGN KEY (hackathon_id) REFERENCES hackathons(id) not valid;

alter table "public"."hackathons_participants" validate constraint "hackathons_participants_hackathon_id_fkey";

alter table "public"."hackathons_participants" add constraint "hackathons_participants_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) not valid;

alter table "public"."hackathons_participants" validate constraint "hackathons_participants_user_id_fkey";

alter table "public"."participants" add constraint "participants_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) not valid;

alter table "public"."participants" validate constraint "participants_user_id_fkey";